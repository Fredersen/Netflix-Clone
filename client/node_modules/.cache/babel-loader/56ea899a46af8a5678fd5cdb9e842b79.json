{"ast":null,"code":"var _jsxFileName = \"/home/naim/Documents/Naim/Netflix Clone/netflix-clone/client/src/components/list/List.jsx\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport './list.scss';\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport ListItem from '../listItem/ListItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function List(_ref) {\n  _s();\n\n  let {\n    list\n  } = _ref;\n  const [isMoved, setIsMoved] = useState(false);\n  const [slideNumber, setSlideNumber] = useState(0);\n  const listRef = useRef();\n\n  const handleClick = direction => {\n    setIsMoved(true);\n    let distance = listRef.current.getBoundingClientRect().x - 50;\n\n    if (direction === \"left\" && slideNumber > 0) {\n      listRef.current.style.transform = `translateX(${230 + distance}px)`;\n      setSlideNumber(slideNumber - 1);\n    }\n\n    if (direction === \"right\" && slideNumber < 5) {\n      listRef.current.style.transform = `translateX(${-230 + distance}px)`;\n      setSlideNumber(slideNumber + 1);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"listTitle\",\n      children: list.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(ArrowBackIosIcon, {\n        className: \"sliderArrow left\",\n        onClick: () => handleClick(\"left\"),\n        style: {\n          display: !isMoved && \"none\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        ref: listRef,\n        children: list.content.map((item, i) => /*#__PURE__*/_jsxDEV(ListItem, {\n          index: i,\n          item: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ArrowForwardIosIcon, {\n        className: \"sliderArrow right\",\n        onClick: () => handleClick(\"right\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 4\n  }, this);\n}\n\n_s(List, \"Iv9XOTedsWAPfmI4OhMVBoYJvBs=\");\n\n_c = List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/home/naim/Documents/Naim/Netflix Clone/netflix-clone/client/src/components/list/List.jsx"],"names":["useRef","useState","ArrowBackIosIcon","ArrowForwardIosIcon","ListItem","List","list","isMoved","setIsMoved","slideNumber","setSlideNumber","listRef","handleClick","direction","distance","current","getBoundingClientRect","x","style","transform","title","display","content","map","item","i"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,OAAO,aAAP;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,OAAOC,mBAAP,MAAgC,qCAAhC;AACA,OAAOC,QAAP,MAAqB,sBAArB;;AAEA,eAAe,SAASC,IAAT,OAAsB;AAAA;;AAAA,MAAR;AAACC,IAAAA;AAAD,GAAQ;AACjC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,CAAD,CAA9C;AAEA,QAAMU,OAAO,GAAGX,MAAM,EAAtB;;AAEA,QAAMY,WAAW,GAAIC,SAAD,IAAe;AAC/BL,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,QAAIM,QAAQ,GAAGH,OAAO,CAACI,OAAR,CAAgBC,qBAAhB,GAAwCC,CAAxC,GAA2C,EAA1D;;AACA,QAAGJ,SAAS,KAAK,MAAd,IAAwBJ,WAAW,GAAG,CAAzC,EAA4C;AACxCE,MAAAA,OAAO,CAACI,OAAR,CAAgBG,KAAhB,CAAsBC,SAAtB,GAAmC,cAAa,MAAML,QAAS,KAA/D;AACAJ,MAAAA,cAAc,CAACD,WAAW,GAAG,CAAf,CAAd;AACH;;AAED,QAAGI,SAAS,KAAK,OAAd,IAAyBJ,WAAW,GAAC,CAAxC,EAA2C;AACvCE,MAAAA,OAAO,CAACI,OAAR,CAAgBG,KAAhB,CAAsBC,SAAtB,GAAmC,cAAa,CAAC,GAAD,GAAOL,QAAS,KAAhE;AACAJ,MAAAA,cAAc,CAACD,WAAW,GAAG,CAAf,CAAd;AACH;AACJ,GAZD;;AAcF,sBACC;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA,gBAA6BH,IAAI,CAACc;AAAlC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACK,QAAC,gBAAD;AAAkB,QAAA,SAAS,EAAC,kBAA5B;AAA+C,QAAA,OAAO,EAAE,MAAMR,WAAW,CAAC,MAAD,CAAzE;AAAmF,QAAA,KAAK,EAAE;AAACS,UAAAA,OAAO,EAAE,CAACd,OAAD,IAAY;AAAtB;AAA1F;AAAA;AAAA;AAAA;AAAA,cADL,eAEK;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,GAAG,EAAEI,OAAhC;AAAA,kBACGL,IAAI,CAACgB,OAAL,CAAaC,GAAb,CAAiB,CAACC,IAAD,EAAOC,CAAP,kBACd,QAAC,QAAD;AAAU,UAAA,KAAK,EAAEA,CAAjB;AAAoB,UAAA,IAAI,EAAED;AAA1B;AAAA;AAAA;AAAA;AAAA,gBADH;AADH;AAAA;AAAA;AAAA;AAAA,cAFL,eAOK,QAAC,mBAAD;AAAqB,QAAA,SAAS,EAAC,mBAA/B;AAAmD,QAAA,OAAO,EAAE,MAAMZ,WAAW,CAAC,OAAD;AAA7E;AAAA;AAAA;AAAA;AAAA,cAPL;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAcD;;GAlCuBP,I;;KAAAA,I","sourcesContent":["import { useRef, useState } from 'react';\nimport './list.scss';\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport ListItem from '../listItem/ListItem';\n\nexport default function List({list}) {\n    const [isMoved, setIsMoved] = useState(false);\n    const [slideNumber, setSlideNumber] = useState(0);\n\n    const listRef = useRef();\n\n    const handleClick = (direction) => {\n        setIsMoved(true);\n        let distance = listRef.current.getBoundingClientRect().x -50;\n        if(direction === \"left\" && slideNumber > 0) {\n            listRef.current.style.transform = `translateX(${230 + distance}px)`;\n            setSlideNumber(slideNumber - 1);\n        }\n\n        if(direction === \"right\" && slideNumber<5) {\n            listRef.current.style.transform = `translateX(${-230 + distance}px)`;\n            setSlideNumber(slideNumber + 1)\n        }\n    }\n\n  return (\n   <div className=\"list\">\n       <span className=\"listTitle\">{list.title}</span>\n       <div className=\"wrapper\">\n            <ArrowBackIosIcon className='sliderArrow left' onClick={() => handleClick(\"left\")} style={{display: !isMoved && \"none\"}} />\n            <div className='container' ref={listRef} >\n              {list.content.map((item, i) => (\n                  <ListItem index={i} item={item} />\n              ))}\n            </div>\n            <ArrowForwardIosIcon className='sliderArrow right' onClick={() => handleClick(\"right\")} />\n       </div>\n   </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}